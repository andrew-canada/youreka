```{r DEATH}

averagePollutantOneYear <- function(csv_data) {
  # biglist: index 1 = county code
  #          index 2 = average concentration per day
  #          index 3 = number of days
sublist <- list(csv_data[2, 1], 0, 0)
biglist <- list(sublist)
# the date for the first county is off
currentIndex <- 1
for (i in 2:nrow(csv_data)) {
  county = csv_data[i, 1] * 1000 + csv_data[i, 2]
  if (county == biglist[[currentIndex]][1]) {
    biglist[[currentIndex]][[2]] <- biglist[[currentIndex]][[2]] + csv_data[i, 20]
    biglist[[currentIndex]][[3]] <- biglist[[currentIndex]][[3]] + 1
  } else {
    hi <- list(county, csv_data[i, 20], 1)
    biglist <- append(biglist, list(hi))
    currentIndex <- currentIndex + 1
  }
}
for (i in 1:length(biglist)) {
  biglist[[i]][[2]] <- biglist[[i]][[2]] / biglist[[i]][[3]]
}
return(biglist)
}

averagePollutantMultipleYears <- function(biggerlist) {
  # biggerlist: index 1: year
  #             index 2: biglist (biggerlist[[i]][[2]] is biglist)
  
  # collectivelist: index 1: countycode
  #                 index 2: average
  #                 index 3: number of days calculated
  
  # stupidvector: list of the index of counties
  
  collectivelist <- list()
  stupidvector <- c()
  
  # set up stupidvector and collectivelist to have all the counties from the first biglist
  for (i in 1:length(biggerlist[[1]][[2]])) {
    
    sublist <- list(biggerlist[[1]][[2]][[i]][[1]], 0, 0)
    collectivelist <- append(collectivelist, list(sublist))
    stupidvector <- append(stupidvector, biggerlist[[1]][[2]][[i]][[1]])
    
  }
  
  # loop through each biglist
  for (i in 1:length(biggerlist)) {
    
    # determine if leap year
    days <- 365
    if (biggerlist[[i]][[1]] %% 4 == 0) {
      days <- 366
    } 
    
    # loop through each county in biglist
    for (j in 1:length(biggerlist[[i]][[2]])) {
      
      if (length(which(stupidvector == biggerlist[[i]][[2]][[j]][[1]])) > 0) {
        
        index = which(stupidvector == biggerlist[[i]][[2]][[j]][[1]])[1]
        collectivelist[[index]][[2]] <- collectivelist[[index]][[2]] + biggerlist[[i]][[2]][[j]][[2]] * days
        collectivelist[[index]][[3]] <- collectivelist[[index]][[3]] + days
        
      }
      
    }
    
  }
    
    for (i in 1:length(collectivelist)) {
      collectivelist[[i]][[2]] <- collectivelist[[i]][[2]] / collectivelist[[i]][[3]]
    }
    
  # code that kills whichever counties did not have data in all the years
    for (i in length(collectivelist):1) {
      
      if (collectivelist[[i]][[3]] >= 365 * length(biggerlist)) {
        
      } else {
        collectivelist[[i]] <- NULL
      }
      
    }
  
  return(collectivelist)
  
}

determineNumber <- function(x) {
  
  tryCatch(
    
    {
      as.numeric(x)
      return(TRUE)
    },
    warning = function(w) {
      return(FALSE)
    }
    
  )
  
}

depression <- function(pollution) {
  
  library(xlsx)
  listy <- list()
  vecy <- c()
  for (i in 1:length(pollution)) {
    listy <- append(listy, list(list(pollution[[i]][[1]], pollution[[i]][[2]],-1)))
    vecy <- append(vecy, pollution[[i]][[1]])
  }
  
  cancer <- read_excel('cdc_129404_DS1.xlsx')
  for (i in 3:nrow(cancer)) {
    
    if (length(which(vecy == as.numeric(cancer[i, 3]))) > 0) {
      
      listy[[which(vecy == as.numeric(cancer[i, 3]))[[1]]]][[3]] <- as.numeric(cancer[i, 6])
      
    }
    
  }
  
  for (i in length(listy):1) {
    
    if (listy[[i]][[3]] == -1) {
      listy[[i]] <- NULL
    }
    
  }
  
  return(listy)
  
}

cancer <- function(pollution, states) {
  
  listy <- list()
  vecy <- c()
  for (i in 1:length(pollution)) {
    listy <- append(listy, list(list(pollution[[i]][[1]], pollution[[i]][[2]],-1)))
    vecy <- append(vecy, pollution[[i]][[1]])
  }
  
  cancer <- read.csv('oral and pharynx.csv')
  for (i in 3:nrow(cancer)) {
    
    # looks through the dataset until it gets to the counties without data
    if (determineNumber(cancer[i, 3])) { 
    
    # adds cancer data to listy
    if (length(which(vecy == as.numeric(cancer[i, 2]))) > 0) { 
      
      # removes counties with big/small populations
      #if (as.numeric(cancer[i, 3]) * 100000 / as.numeric(cancer[i, 9]) <= 50000) {
      
      listy[[which(vecy == as.numeric(cancer[i, 2]))[[1]]]][[3]] <- as.numeric(cancer[i, 3])
      
      #}
      
    }
      
    } else {
      break
    }
    
  }
  
  # removes stuff from listy that is not good enough
  for (i in length(listy):1) {
    
    if (listy[[i]][[3]] == -1) {
      listy[[i]] <- NULL # removes the ones that did not have data in all the years
    } else if (length(which(states==(listy[[i]][[1]] %/% 1000))) == 0) {
      listy[[i]] <- NULL # removes everything not in the desired state
    } 
    
  }
  
  # listy: 1 = fips
  #        2 = pollution average
  #        3 = cancer incidence
  
  return(listy)
  
}

smoking <- function(listy) {
  
  # making a vector of all the counties in listy. it should only contain the states we want
  stupidvector <- c()
  for (i in 1:length(listy)) {
    stupidvector <- append(stupidvector, listy[[i]][[1]])
  }
  
  smokingData <- read.csv("pennsylvania-2016-adult-smoking-place-sort.csv")
  
  # loops through the smoking data
  for (i in 2:nrow(smokingData)) {
    
    x <- fips(smokingData[1, 1], smokingData[i, 1])
    if (length(which(stupidvector == x)) > 0) {
      
      # if x% of the population smokes, assume that x% of the cancer is caused by smoking
      listy[[which(stupidvector == x)]][[3]] <- listy[[which(stupidvector == x)]][[3]] * (1-as.numeric(sub("%","",smokingData[i, 2]))/100)
    }
    
  }
  print(listy)
  
  return(listy)
  
}

coordinates <- function(listy) {
  
  # makes a graph and prints the correlation thing
  x <- c()
  y <- c()
  
  for (i in 1:length(listy)) {
    
    x <- append(x, listy[[i]][[2]])
    y <- append(y, listy[[i]][[3]])
    
  }
  
  plot(x, y)
  abline(lm(y ~ x))
  print(cor(x, y))
  
}

# asking user for what pollutant and what year to gather all the databases and put them into biggerlist
pollutant = readline(prompt = "Which pollutant: ")
pollutantNum = 0
if (pollutant == "ozone") {
  pollutantNum = 44201
} else if (pollutant == "nitrogen dioxide") {
  pollutantNum = 42602
} else if (pollutant == "sulfur dioxide") {
  pollutantNum = 42401
} else if (pollutant == "carbon monoxide") {
  pollutantNum = 42101
} else if (pollutant == "pm10") {
  pollutantNum = 81102
}
startYear = readline(prompt = "Start year: ")
startYear = as.integer(startYear)
endYear = readline(prompt = "End year: ")
endYear = as.integer(endYear)
data3 <- list()

for (i in startYear:endYear) {
  name = paste("daily_", pollutantNum, "_", i, ".csv", sep = "")
  data <- read.csv(file = name) 
  data2 <- averagePollutantOneYear(data)
  data3 <- append(data3, list(list(i, data2)))
}
states <- c(42)
q <- averagePollutantMultipleYears(data3)
m <- cancer(q, states)
e <- smoking(m)
coordinates(e)
```
